<html><head><meta name="viewport" content="width=device-width, initial-scale=1"> <meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <link rel="stylesheet" href="../../acldoc-styles.css" type="text/css"><title>chdir</title></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Function</b></td><td align="left" bgcolor="#00FFFF"><b>Package: excl</b></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faq/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 10.1</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 10.0 to 10.1.</a></small><br><a href="http://www.franz.com/support/documentation/10.0/doc/operators/excl/chdir.htm">10.0 version</a></td></tr></table><h2 id="2">chdir</h2>

<p id="3"><b>Arguments: </b><i></i> &amp;optional <i>directory</i></p>

<p id="4">
The <code>:osi</code> module has additional functionality
relating to file handling. The symbol <code>excl:chdir</code> is
exported from the new <code>excl.osi</code> package (as well as
from the
<code>excl</code> package). See <a href="../../os-interface.htm#osi-file-handling-2">OSI file handling functionality</a> in
<a href="../../os-interface.htm">os-interface.htm</a>.
</p>

<p id="5">
This function is designed to mimic the UNIX/DOS <strong>cd</strong>
utility. <b><i>directory</i></b>, if supplied, must be a
pathname or sting naming a directory (it cannot name a file). Assuming
it exists, that directory will become the current working directory.
If the directory is relative, the new directory is determined relative
to the current working directory (as returned by <a href="current-directory.htm"><b>current-directory</b></a>).
If <i>directory</i> is a string and does not contain a
trailing / (so "/usr/tmp" rather than "/usr/tmp/" -- backslashes can
be used when on Windows), it is filled in automatically.
</p>
<p id="6">
If you happen to have the pathname of a file,
applying either <a href="path-namestring.htm"><b>path-namestring</b></a> or <a href="path-pathname.htm"><b>path-pathname</b></a> to it will return a value
suitable as an argument to <a href="chdir.htm"><b>chdir</b></a>:
</p>

<pre id="7">
(setq path (pathname &quot;/net/gemini/home/dm/xml-fns.cl&quot;))
(chdir path) -&gt; ERROR
(chdir (path-pathname path)) RETURNS &quot;/net/gemini/home/dm/&quot;
(chdir (path-namestring path)) RETURNS &quot;/net/gemini/home/dm/&quot;
</pre>

<p id="8">
This function does not modify the value of <a href="../../../ansicl/dictentr/default-.htm"><code>*default-pathname-defaults*</code></a>. Therefore, after
calling this function, it is likely that the current directory, as
returned by <a href="current-directory.htm"><b>current-directory</b></a>, will be differrent from the
directory specified in <a href="../../../ansicl/dictentr/default-.htm"><code>*default-pathname-defaults*</code></a>. The related
top-level command <a href="../../tpl-commands/cd.htm"><b>:cd</b></a> does modify
the value of <a href="../../../ansicl/dictentr/default-.htm"><code>*default-pathname-defaults*</code></a>. The following form
modifies both the current directory and <a href="../../../ansicl/dictentr/default-.htm"><code>*default-pathname-defaults*</code></a>:
</p>
<pre id="9">
(setf *default-pathname-defaults* (pathname (chdir directory)))
</pre>
<p id="10">
Because of a mismatch between UNIX and Common Lisp
interpreting of strings naming directories, string arguments are
handled specially, as we describe now. The following table shows the
behavior of <a href="chdir.htm"><b>chdir</b></a> given
various values of pathname:
</p>

<div align="left">

<table BORDER="1" CELLSPACING="1" CELLPADDING="8">
  <tr>
    <td WIDTH="25%" VALIGN="TOP"><p id="11" ALIGN="CENTER"><strong>pathname is</strong></p></td>
    <td WIDTH="67%" VALIGN="TOP"><p id="12" ALIGN="CENTER"><strong>Action by chdir</strong></p></td>
  </tr>
  <tr>
    <td WIDTH="25%" VALIGN="TOP">not specified</td>
    <td WIDTH="67%" VALIGN="TOP">Change to the current user's home directory. 
    (See <a href="../../implementation.htm#user-homedir-pathname-2">What 
    user-homedir-pathname does on Windows</a> in 
    <a href="../../implementation.htm">implementation.htm</a> for a discussion of what a home 
    directory means on Windows.)
    </td>
  </tr>
  <tr>
    <td WIDTH="25%" VALIGN="TOP">A pathname object naming a directory</td>
    <td WIDTH="67%" VALIGN="TOP">Extract the directory component of the 
    pathname (translating
    first if it is a logical pathname). Change to that directory. 
    Relative pathnames are
    resolved with respect to the current working directory (as returned by 
    <a href="current-directory.htm"><b>current-directory</b></a>). This will
    not work is the pathname object names a file.</td>
  </tr>
  <tr>
    <td WIDTH="25%" VALIGN="TOP">A string containing a /, : (colon), 
    or ; (semicolon) naming a
    directory pathname (perhaps missing a final /)</td>
    <td WIDTH="67%" VALIGN="TOP">Convert to a pathname object, 
    then continue as in the `A pathname object' row of
    this table. See <strong>Note 1</strong> below.</td>
  </tr>
  <tr>
    <td WIDTH="25%" VALIGN="TOP">A string without a /, : (colon), 
    or ; (semicolon).</td>
    <td WIDTH="67%" VALIGN="TOP">Add a / to the end of the string, 
    convert to a pathname
    object, then continue as in the `A pathname object' row
    of this table. See <strong>Note 1</strong> below.</td>
  </tr>
</table>
</div>

<p id="13">
<strong>Examples</strong>. The current Unix user's home directory
is <em>/usr/tech/doe/</em>. The directory <em>/usr/tech/doe/tmp/</em>
exists. The Allegro directory for the Lisp image is assumed to be 
<em>/usr/local/acl/</em> though the actual value contains by default
the release number and is in any case user-settable.
</p>

<pre id="14">
user(15): (chdir) ;; no argument: change to user home directory
"/usr/tech/doe/"
user(16): (chdir "sys:") 
   ;; a string naming a logical pathname which translates
   ;; to the Allegro directory (the value you see may be different
   ;; usually containing the release number).
"/usr/local/acl/"
user(17): (chdir)
"/usr/tech/doe/"
user(18): (chdir "tmp") ;; change to the tmp/ subdirectory
"tmp/"
user(19): (chdir (make-pathname :directory "tmp")) 
   ;; The absolute directory 
"/tmp/"
user(20): (chdir)
"/usr/tech/doe/"
user(21): </pre>

<p id="15">
<strong>Note 1</strong>. A / is added to the end of a string that may
contain a /, ;, or : but does not end in a / in order
that <code>(chdir "tmp")</code> will work as `cd tmp' does in
UNIX and DOS: change to the <em>tmp</em> subdirectory of the current
directory. Also <code>(chdir "/usr/tmp")</code> will work as 'cd
/usr/tmp' does, change to the <em>tmp</em> subdirectory of
the <i>/usr/</i> directory. Following the ANSI CL
spec, <code>(make-pathname :directory "tmp")</code> creates the
absolute pathname object with namestring "/tmp/"
while <code>(make-pathname :directory "tmp/")</code> creates the
relative pathname with namestring "tmp/".  It is the second that
follows the UNIX paradigm. Appending a / guarantees that effect. 
This means the <b><i>directory</i></b> argument
cannot name a file. If there is a file named <i>tmp</i> in
the <i>/usr/</i> directory, when <code>(chdir "/usr/tmp")</code>
adds a trailing /, it will then error because <i>/usr/tmp/</i> does
not name a directory.
</p>

<p id="16">
<a href="chdir.htm"><b>chdir</b></a> returns the
namestring of the directory component of the pathname changed to. 
This may not be the new current directory (as returned by <a href="current-directory.htm"><b>current-directory</b></a>).
</p>

<p id="17">
<strong>Warning about interaction between chdir and foreign loading
and dumplisp</strong>: if the command line used to start Lisp
identified the Allegro CL image with a relative pathname (`./mlisp',
for example), you cannot do the first load of foreign code or dump an
image with <a href="dumplisp.htm"><b>dumplisp</b></a> after changing the
directory with this function. Therefore, if you started Lisp with a
relative pathname, do at least one foreign load before calling <a href="chdir.htm"><b>chdir</b></a> and do not call <a href="dumplisp.htm"><b>dumplisp</b></a> after calling <a href="chdir.htm"><b>chdir</b></a>. (The problem is that when
doing the first foreign load or a dumplisp, Lisp needs to examine the
running image, which it finds by examining the command line that
invoked the image. If Lisp is identified on the command line with a
relative pathname and the current directory has been changed, the
relative pathname merged with the current directory no longer points
to the running image. Changing back to the original current directory
fixes the problem.)
</p>

<p id="18">
See <a href="../../tpl-commands/cd.htm"><b>:cd</b></a>, <a href="../../tpl-commands/popd.htm"><b>:popd</b></a>, and <a href="../../tpl-commands/pushd.htm"><b>:pushd</b></a>, which also change the
current
directory.
See also <a href="../../os-interface.htm">os-interface.htm</a> for general
information on the interface between Allegro
CL and the operating system.
</p>


<hr><p id="19"><small>Copyright (c) 1998-2017, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br>
<small>This page was not revised from the 10.0 page.</small><br><small>Created 2017.2.15.</small><br>
</p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faq/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 10.1</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 10.0 to 10.1.</a></small><br><a href="http://www.franz.com/support/documentation/10.0/doc/operators/excl/chdir.htm">10.0 version</a></td></tr></table></body></html>