<html><head><meta name="viewport" content="width=device-width, initial-scale=1"> <meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <link rel="stylesheet" href="../../acldoc-styles.css" type="text/css"><title>*redefinition-warnings*</title></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Variable</b></td><td align="left" bgcolor="#00FFFF"><b>Package: excl</b></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faq/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 10.1</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 10.0 to 10.1.</a></small><br><a href="http://www.franz.com/support/documentation/10.0/doc/variables/excl/s_redefinition-warnings_s.htm">10.0 version</a></td></tr></table><h2 id="2">*redefinition-warnings*</h2>

<p id="3">This variable controls most redefinition warnings. There are four 
kinds of such warnings:
</p>

<ol>
<li id="4">Defining something in two different files (or in a file and at
the listener).</li>
<li id="5">Defining something twice in a single file.</li>
<li id="6">Defining a macro as a function.</li>
<li id="7">Defining a function as a macro.</li>
</ol>

<p id="8">
This variable controls the first three types. It does not affect the
fourth type (a warning in that case is signaled unconditionally). See
<a href="#fourth-reason">below</a> for more information on this case.
</p>
<p id="9">
If the value of this variable is <code>nil</code>,
redefinitions of the first three listed types will not signal warnings
under any circumstances. 
</p>
<p id="10">
If the value of this variable is true,
redefinition of the third listed type will signal a warning that a macro
is being redefined as a function.
</p>

<p id="11">If true, the value should be either <code>t</code> or a list of keywords identifying the objects for
which redefinition warnings should be printed. If it is <code>t</code>, warnings are signaled for the first three types of
redefinition. If it is a list of keywords, warnings are signaled for
type 1 and 2 redefinitions only if the relevant keyword is present.
The following table shows many of the the
keywords supported.
</p>
<div align="left">

<table BORDER="1" CELLSPACING="1" CELLPADDING="8" WIDTH="95%">
  <tr>
    <td VALIGN="TOP" COLSPAN="2" width="576"><p id="12" ALIGN="CENTER">Redefinition keywords and
    their effect</p></td>
  </tr>
  <tr>
    <td WIDTH="200" VALIGN="TOP"><p id="13" ALIGN="CENTER">Keyword</p></td>
    <td WIDTH="356" VALIGN="TOP"><p id="14" ALIGN="CENTER">Definitions for which warnings will be
    printed</p></td>
  </tr>
  <tr>
    <td WIDTH="200" VALIGN="TOP"><code>:operator</code></td>
    <td WIDTH="356" VALIGN="TOP"><p id="15">defun</p>
    <p id="16">clos:generic-function</p>
    <p id="17">defmacro</p></td>
  </tr>
  <tr>
    <td WIDTH="200" VALIGN="TOP"><code>:variable</code></td>
    <td WIDTH="356" VALIGN="TOP"><p id="18">defconstant</p>
    <p id="19">defparameter</p>
    <p id="20">defvar</p></td>
  </tr>
  <tr>
    <td WIDTH="200" VALIGN="TOP"><code>:special-declaration</code></td>
    <td WIDTH="356" VALIGN="TOP"><p id="21">defconstant</p>
    <p id="22">defparameter</p>
    <p id="23">defvar</p></td>
  </tr>
  <tr>
    <td WIDTH="200" VALIGN="TOP"><code>:compiler-macro</code></td>
    <td WIDTH="356" VALIGN="TOP"><code><strong>define-compiler-macro</strong></code></td>
  </tr>
  <tr>
    <td WIDTH="200" VALIGN="TOP"><code>:setf-method</code></td>
    <td WIDTH="356" VALIGN="TOP"><code><strong>defsetf</strong></code></td>
  </tr>
  <tr>
    <td WIDTH="200" VALIGN="TOP"><code>:type</code></td>
    <td WIDTH="356" VALIGN="TOP"><p id="24">defclass</p>
    <p id="25">defstruct</p>
    <p id="26">deftype</p></td>
  </tr>
</table>
</div>

<p id="27">
The initial value of this variable is a list containing all six
keywords. Note that the initial value when using the Integrated
Development Environment also contains certain symbols and keywords
specific to the IDE (and not further documented).
</p>

<p id="28">The function 
<a href="../../../ansicl/dictentr/load.htm"><b>load</b></a> and its associates like the
top-level command 
<a href="../../tpl-commands/ld.htm"><b>:ld</b></a>
lambda binds this variable to itself when loading a file so the value
of this variable cannot be changed by a form in a file being
loaded. The following form in a file will change the value outside the
binding:</p>

<pre id="29">
(setf (mp:global-symbol-value 'excl:*redefinition-warnings 
                              &lt;new-value&gt;)
</pre>

<p id="30">
<a name="fourth-reason"></a><b>More on redefining a function as a
macro.</b> If a function is redefined as a macro, calls to the
operator in code compiled before the redefinition will signal an
error. That is because the call is to the function previously defined,
and the system is unable to convert the call into an appropriate macro
expansion. (See <a href="../../errors.htm#attempt-to-call-2">Attempt to call -name- which is defined
as a macro</a> in <a href="../../errors.htm">errors.htm</a>.) Because the
change can result in an error, it is considered best that the warning
not be controlled by a global variable. If you want to suppress the
warning, wrap the <b>defmacro</b> call in a <a href="../../../ansicl/dictentr/handler0.htm"><b>handler-bind</b></a> like this:
</p>

<pre id="31">
(handler-bind 
  ((warning #'(lambda (c) (declare (ignore c)) (muffle-warning))))
  (defmacro foo ....))
</pre>

<p id="32">
See <a href="../../source-file-recording.htm#redefinition-warnings-1">Redefinition warnings</a> in
<a href="../../source-file-recording.htm">source-file-recording.htm</a>. See also <a href="../../operators/excl/without-redefinition-warnings.htm"><b>without-redefinition-warnings</b></a>.
</p>

<hr><p id="33"><small>Copyright (c) 1998-2017, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br>
<small>This page was not revised from the 10.0 page.</small><br><small>Created 2017.2.15.</small><br>
</p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faq/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 10.1</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 10.0 to 10.1.</a></small><br><a href="http://www.franz.com/support/documentation/10.0/doc/variables/excl/s_redefinition-warnings_s.htm">10.0 version</a></td></tr></table></body></html>