<html><head><meta name="viewport" content="width=device-width, initial-scale=1"> <meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <link rel="stylesheet" href="../../acldoc-styles.css" type="text/css"><title>rpc-process-pool</title></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Function</b></td><td align="left" bgcolor="#00FFFF"><b>Package: net.rpc</b></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faq/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 10.1</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 10.0 to 10.1.</a></small><br><a href="http://www.franz.com/support/documentation/10.0/doc/operators/rpc/rpc-process-pool.htm">10.0 version</a></td></tr></table><h2 id="2">rpc-process-pool</h2>

<p id="3"><b>Arguments: </b><i>
</i>&amp;key <i>limit drop active query flush forget show</i><i>
</i></p>


<p id="4">
This function is used to query and to manage the process pool
maintained by the Allegro CL RPC Module.  Each new in-bound remote
call (a call that is not a callback from an out-bound call) is
evaluated in a new Lisp process. In the os-threads model of Lisp
multi-processing (see <a href="../../multiprocessing.htm">multiprocessing.htm</a>), there is
some overhead associated with the creation of a new Lisp process. The
process pool reduces this overhead by re-using processes.
</p>
<p id="5">
The keyword arguments are:
</p>
<ul>
<li id="6">
<i>limit</i>: This argument is used to set the limit on
the number of idle processes kept in the pool. The initial value is
15. Valid values are integers from 1 to 100. Note that the processes
kept in the pool are reserved for remote calls. If there is an OS
limit on the number of running processes, then the processes in the
pool are included in that limit.
</li>
<li id="7">
<i>drop</i>: This argument is used to set the limit on how long idle processes are kept in the pool. The initial value is 15; the units are minutes. Valid values are integers from 0 to 1000000. If this parameter is 0, then processes are discarded as soon as they are done, and the process pool will almost always be empty.
</li>
<li id="8">
<i>active</i>: This argument is used to set the limit on the number of processes that will be run simultaneously to handle remote calls. The initial value is 10. Valid values are integers from 1 to 100, but note that the actual number of running processes may be bounded by an OS resource limit.
</li>
<li id="9">
<i>query</i>: when a value from the list given below is
given for this argument, the value of the function call is the value
of a parameter of the process pool. Otherwise the value returned is
<code>nil</code>. See below for possible values for <i>query</i> and the resulting value of the function call.
</li>
<li id="10">
<i>show</i>: When non-<code>nil</code>,
display the status, parameters and statistics of the process pool on
<a href="../../../ansicl/dictentr/debug-io.htm"><code>*standard-output*</code></a>.
</li>
<li id="11">
<i>flush</i>: When non-<code>nil</code>,
discard all the idle processes in the pool.
</li>
<li id="12">
<i>forget</i>: When non-<code>nil</code>,
discard any pending remote calls waiting for a process.
</li>
<li id="13">
<i>new</i>: When <code>:none</code>, disable the
process pool facility. When non-<code>nil</code> (but not
<code>:none</code>), start a new pool. In both cases, all
previous statistics are discarded.If the <i>flush</i>
and/or <i>forget</i> arguments are non-<code>nil</code>, their effect takes place first.  If the
<i>flush</i> argument is <code>nil</code> or
omitted, then any idle processes are discarded with a warning. If the
<i>forget</i> argument is <code>nil</code> or omitted, then any waiting work items are
discarded with a warning.
</li>
</ul>
<h3 id="14">Possible values for the query argument</h3>

<p id="15">
If the value of the <i>query</i> argument is one of the
listed keywords, <a href="rpc-process-pool.htm"><b>rpc-process-pool</b></a> returns information about
the process pool and the status of processes, as described. If the
value of the <i>query</i> argument is <code>nil</code> or omitted, <a href="rpc-process-pool.htm"><b>rpc-process-pool</b></a> returns <code>nil</code>.
</p>

<table BORDER="1" CELLSPACING="1" CELLPADDING="7" WIDTH="95%">
  <tr>
    <td WIDTH="33%" VALIGN="TOP"><strong>Value of</strong> 
    <i>query</i></td>
    <td WIDTH="67%" VALIGN="TOP"><strong>Value returned by 
    rpc-process-pool</strong></td>
  </tr>
  <tr>
    <td WIDTH="33%" VALIGN="TOP"><code>nil</code>.
    This is the default.</td>
    <td WIDTH="67%" VALIGN="TOP"><code>nil</code></td>
  </tr>
  <tr>
    <td WIDTH="33%" VALIGN="TOP"><code>:waiting</code></td>
    <td WIDTH="67%" VALIGN="TOP">Return the number of remote calls waiting for     a process at this moment.
    </td>
  </tr>
  <tr>
    <td WIDTH="33%" VALIGN="TOP"><code>:pool</code></td>
    <td WIDTH="67%" VALIGN="TOP">Return the number
    of idle processes in the pool at this moment.
    </td>
  </tr>
  <tr>
    <td WIDTH="33%" VALIGN="TOP"><code>:running</code></td>
    <td WIDTH="67%" VALIGN="TOP">Return the number
    of processes running a remote call at this moment.
    </td>
  </tr>
  <tr>
    <td WIDTH="33%" VALIGN="TOP"><code>:limit</code></td>
    <td WIDTH="67%" VALIGN="TOP">Return the limit
    on the number of idle processes kept in the pool.
    </td>
  </tr>
  <tr>
    <td WIDTH="33%" VALIGN="TOP"><code>:drop</code></td>
    <td WIDTH="67%" VALIGN="TOP">Return the limit
     on how long idle processes are kept in the pool.
    </td>
  </tr>
  <tr>
    <td WIDTH="33%" VALIGN="TOP"><code>:active</code></td>
    <td WIDTH="67%" VALIGN="TOP">Return the limit on the number 
    of processes that will be run simultaneously to handle remote calls.
    </td>
  </tr>
  <tr>
    <td WIDTH="33%" VALIGN="TOP"><code>:max-active</code></td>
    <td WIDTH="67%" VALIGN="TOP">Return the maximum number 
    of active processes.
    </td>
  </tr>
  <tr>
    <td WIDTH="33%" VALIGN="TOP"><code>:max-waiting</code></td>
    <td WIDTH="67%" VALIGN="TOP">Return the maximum number 
    of calls waiting for a process.
    </td>
  </tr>
  <tr>
    <td WIDTH="33%" VALIGN="TOP"><code>:re-used</code></td>
    <td WIDTH="67%" VALIGN="TOP">Return the number 
    of times a process was re-used.
    </td>
  </tr>
  <tr>
    <td WIDTH="33%" VALIGN="TOP"><code>:new</code></td>
    <td WIDTH="67%" VALIGN="TOP">Return the number 
    of times a process was created.
    </td>
  </tr>
  <tr>
    <td WIDTH="33%" VALIGN="TOP"><code>:saved</code></td>
    <td WIDTH="67%" VALIGN="TOP">Return the number 
    of times a process was saved for re-use.
    </td>
  </tr>
  <tr>
    <td WIDTH="33%" VALIGN="TOP"><code>:killed</code></td> 
    <td WIDTH="67%" VALIGN="TOP">Return the number of times a process was
    discarded after use.
    </td>
  </tr>
  <tr>
    <td WIDTH="33%" VALIGN="TOP"><code>:dropped</code></td>
    <td WIDTH="67%" VALIGN="TOP">Return the number of times a process
     was discarded from the idle pool
    </td>
  </tr>
</table>

<p id="16">
See also <a href="../../rpc.htm">rpc.htm</a> for general information on the
Remote Procedure Call utility in Allegro CL.
</p>

<hr><p id="17"><small>Copyright (c) 1998-2017, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br>
<small>This page was not revised from the 10.0 page.</small><br><small>Created 2017.2.15.</small><br>
</p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faq/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 10.1</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 10.0 to 10.1.</a></small><br><a href="http://www.franz.com/support/documentation/10.0/doc/operators/rpc/rpc-process-pool.htm">10.0 version</a></td></tr></table></body></html>